#!/bin/bash
# BFCL 实验运行脚本
# 配置说明：使用8个GPU进行BFCL测试，结合GSM8K评估

# ============================================
# GPU 配置
# ============================================
export GPUS_PER_NODE=8
export USE_SINGLE_PROCESS_SHARDING=0

# ============================================
# 存储后端配置
# ============================================
export ARCHIVE_BACKEND=gpu

# ============================================
# 遗传算法参数
# ============================================
export POP_SIZE=8                    # 种群大小
export TOTAL_FORWARD_PASSES=3000     # 总前向传播次数
export RUNS=1                        # 运行次数

# ============================================
# 权重参数
# ============================================
export OMEGA=0.9                     # Omega权重
export BETA=0.1                      # Beta权重

# ============================================
# 剪枝配置
# ============================================
export PRUNING_SPARSITY=0.2          # 剪枝稀疏度

# ============================================
# 评估配置
# ============================================
export EVAL_SUBSET_SIZE=20           # 评估子集大小
export USE_BFCL_EVAL=true            # 启用BFCL评估
export BFCL_DATA_PATH=bfcl/data/bfcl_test_200.json  # BFCL数据路径

# ============================================
# 评估权重
# ============================================
export GSM8K_WEIGHT=0.5              # GSM8K任务权重
export BFCL_WEIGHT=0.5               # BFCL任务权重

# ============================================
# 模型路径
# ============================================
export MODEL1_PATH=models/Qwen2.5-0.5B-Instruct
export MODEL2_PATH=models/Qwen2.5-0.5B-Instruct

# ============================================
# 输出目录
# ============================================
export OUTPUT_DIR=results_bfcl_full_8gpu

# ============================================
# 执行脚本
# ============================================
echo "开始运行BFCL实验..."
echo "输出目录: ${OUTPUT_DIR}"
echo "使用GPU数量: ${GPUS_PER_NODE}"
echo "种群大小: ${POP_SIZE}"
echo "总迭代次数: ${TOTAL_FORWARD_PASSES}"
echo "=========================================="

bash run_bfcl_single_node.sh

echo "=========================================="
echo "实验完成！"

